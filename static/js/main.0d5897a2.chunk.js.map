{"version":3,"sources":["Reducers/index.js","Components/App.js","Network/AolloGraphjQL.js","Network/appsync.js","views/200_Dashboard/ImageAvatar.js","views/200_Dashboard/Dashboard.jsx","Components/NotFound.js","Apis/getSessionDemo.js","Apis/acme_sub.js","Apis/post_acme.js","Components/Hooks/SubscriptionQr.jsx","views/010_Login/010_Login.jsx","index.js"],"names":["combineReducers","messageItem","text","receivedMessage","graphMessage","action","type","payload","App","history","useHistory","useCookies","cookie","useEffect","setTimeout","dashboard","sid","push","url","auth","apiKey","link","ApolloLink","from","createAuthLink","region","createSubscriptionHandshakeLink","client","ApolloClient","cache","InMemoryCache","useStyles","makeStyles","theme","root","display","margin","spacing","typography","fontFamily","htmlFontSize","small","width","height","large","ImageAvatars","classes","className","Avatar","alt","Typography","Alert","props","elevation","variant","marginTop","Dashboard","React","useState","open","setOpen","firstLoad","setFirstLoad","removeCookie","backScreen","path","handleClose","event","reason","console","log","Card","Button","color","onClick","Paper","square","Snackbar","autoHideDuration","onClose","severity","NotFound","location","useLocation","pathname","gql","useSubscriptionQr","data","useSubscription","acme_sub","variables","Login_010","useMutation","getSessionDemo","getSession","setSid","post_acme","setCookie","qrString","setQrString","dataSubscription","notifications","session","a","response","passwordless","QRbase64","SendingAuthCircularProgress","withStyles","CircularProgress","showQRImage","size","thickness","src","delay","Grid","container","item","lg","md","sm","xs","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","routes","exact","component","WithProvider","CookiesProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d5897a2.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\n\n// this is just a sample, look up in ReduxMessageTrigger\nconst messageItemReducer = () =>{\n  return [\n    {\n      text: \"Item in Array\",\n    }\n  ]\n}\n\nconst graphMessageReducer = (graphMessage = null,action) =>{\n  if (action.type === 'GRAPHQL_MESSAGE_RECEIVED'){\n    return action.payload;\n  }\n  return graphMessage;\n}\n\nexport default combineReducers(\n    {\n      messageItem: messageItemReducer,\n      receivedMessage: graphMessageReducer\n    }\n)","import React, {useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useHistory } from \"react-router-dom\";\n// import {ThemeProvider} from \"styled-components\";\n// import GlobalStyle, {theme} from \"../Styles/globalStyle\";\n// import Typography from \"@material-ui/core/Typography\";\n// import styled from \"styled-components\";\n// import SubscriptionArea from \"./SubscriptionArea\";\n// import PostMessageArea from \"./PostMessageArea\";\n// import MessageArea from \"./000_Elements/MessageArea\";\n// import ReduxArea from \"./000_Elements/ReduxMessageTrigger\";\n\n// class App extends React.Component {\n//\n//\n//   render() {\n//     return (\n//         <ThemeProvider theme={theme}>\n//           <div>\n//             <ReduxArea/>\n//             <br/>\n//             <PostMessageArea/>\n//             <StyledTypography>Messenger Send</StyledTypography>\n//             <SubscriptionArea/>\n//             <br/>\n//             <MessageArea/>\n//             <hr/>\n//           </div>\n//           <GlobalStyle/>\n//         </ThemeProvider>\n//     );\n//   }\n// }\n\nconst App = () => {\n\n    const history   = useHistory();\n    const [ cookie ]= useCookies(['sid']);\n\n    useEffect(() => {\n        setTimeout(() =>{\n            dashboard();\n        },100);\n    },[]);\n\n    const dashboard = () =>{\n        if(cookie.sid)\n            history.push('/dashboard');\n        else\n            history.push('/login');\n    };\n\n    return(\n        <div>\n        </div>\n    );\n\n};\n\nexport default App;","import { createAuthLink } from 'aws-appsync-auth-link';\nimport { createSubscriptionHandshakeLink } from 'aws-appsync-subscription-link';\n\nimport { ApolloLink } from 'apollo-link';\n// import { createHttpLink } from 'apollo-link-http';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport {awsCreds} from \"./appsync\";\n\nconst url = awsCreds().graphqlEndpoint;\nconst region = awsCreds().region;\nconst auth = {\n  type: awsCreds().authenticationType,\n  apiKey: awsCreds().apiKey,\n};\n\n// const httpLink = createHttpLink({ uri: url });\n\nconst link = ApolloLink.from([\n  createAuthLink({ url, region, auth }),\n  createSubscriptionHandshakeLink({ url, region, auth })\n]);\n\nexport const client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})","import ApolloClient from 'apollo-boost';\n\nexport const awsCreds = () => {\n  return {\n  \"graphqlEndpoint\": \"https://efvg3mt46zg47hwy4qh66h7j5e.appsync-api.us-east-1.amazonaws.com/graphql\",\n  \"region\": \"us-east-1\",\n  \"authenticationType\": \"API_KEY\",\n  \"apiKey\": \"da2-7bvepoom6zd7xlr7yoystouoxu\"\n  }\n}\n\n\n// export const clientGQL = new ApolloClient({\n//\n//   uri : 'https://efvg3mt46zg47hwy4qh66h7j5e.appsync-api.us-east-1.amazonaws.com/graphql',\n//   headers : {\n//     'x-api-key'     : 'da2-osser7q6zfhrlcpuib7rhupfwy',\n//     'Content-Type'  : 'application/json',\n//     'Accept-Language': 'en-US,en;q=0.9,es-419;q=0.8,es;q=0.7'\n//   }\n//\n// });\n// //\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    typography: {\n      fontFamily: 'aeonikmedium',\n      htmlFontSize: 12,\n    },\n\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nexport default function ImageAvatars() {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.root}>\n        <Avatar alt=\"M\" className={classes.small}><Typography>M</Typography></Avatar>\n      </div>\n  );\n}","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useCookies} from \"react-cookie\";\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport './Dashboard.css'\nimport Card from \"@material-ui/core/Card\";\nimport {FadeIn} from \"react-fade-in\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ImageAvatar from \"./ImageAvatar\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n  },\n}));\n\n// const dashBoard2 = () => {\n//   const [openBox, setOpenBox] = React.useState(false);\n//\n// }\n\nconst Dashboard = () => {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [firstLoad, setFirstLoad] = useState(false);\n\n  const history = useHistory();\n  const [cookie, setCookie, removeCookie] = useCookies(['sid']);\n\n\n  const backScreen = () => {\n    history.push('/');\n    removeCookie('sid', {path: '/'});\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (firstLoad !== true) {\n      setTimeout(() => {\n        handleClick();\n      }, 1000);\n\n      setFirstLoad(true);\n    }\n  });\n\n  const showCardArea = () => {\n    return (\n        <Card className=\"signUp-card-fadeInLayout animatedBox fadeInBox\">\n          <div className=\"dashboardTitle\">\n            Welcome to Mvnifest!\n          </div>\n          <div className=\"centeredTitle\">\n            (Dashboard goes here!)\n          </div>\n          <br/>\n          <Button variant=\"contained\" color=\"secondary\" className=\"buttonCentered\" onClick={backScreen}>\n            Start Process Again\n          </Button>\n        </Card>\n    );\n  }\n\n  console.log(cookie);\n\n  return (\n      <div className=\"dashboard\">\n        {showCardArea()}\n        <Paper className=\"topBar\" square={true} elevation={5.0} >\n          <div className=\"topBarColor\">\n          <div className=\"top_title_text_dashboard\">\n            mvnifest.\n          </div>\n          <div className=\"userGuy\">\n            <ImageAvatar/>\n          </div>\n          </div>\n        </Paper>\n\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"success\" >\n            Dashboard loaded!\n          </Alert>\n        </Snackbar>\n      </div>\n\n\n  );\n\n};\n\nexport default Dashboard;\n\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst NotFound = () => {\n\n    const location = useLocation();\n\n    return (\n        <h1> { `Route ${location.pathname} not found` } </h1>\n    );\n\n};\n\nexport default NotFound;","import gql from 'graphql-tag'\n\n// export default gql`\n//     mutation demo_function($funcName:String!, $data:String!) {\n//         testfunc(function:$funcName, data:$data) {\n//             data\n//             qrdata\n//             status\n//             {\n//                 code\n//                 description\n//                 debug_info\n//             }\n//         }\n//     }`\n\nexport default gql`\n    mutation passwordless($command:String!) {\n        passwordless( command:$command ) {\n            sid\n            QRbase64\n        }\n    }`;","import gql from 'graphql-tag'\n\n// export default gql`\n//     subscription AuthSub {\n//         notifications(session:\"123\") {\n//             session\n//             context\n//             payload\n//         }\n//     }`;\n\nexport default gql`subscription notifications ($sid:String!) {\n    notifications(sid:$sid) {\n        sid\n        command\n        context\n        payload\n    }\n}\n`;","import gql from 'graphql-tag';\n\n// export default gql`\n//     mutation sendPost ($session:String $command: String $context:String, $payload:String) {\n//         message( session: $session, command:$command, context:$context, payload:$payload) {\n//             session\n//             command\n//             context\n//             payload\n//         }\n//     }`\n\nexport default gql`\nmutation message($command:String $sid:String! $payload:String $context:String ) {\n   new_message : message( sid:$sid command:$command payload:$payload context:$context ) {\n          __typename\n        }\n    }`;","import React from \"react\";\nimport { useSubscription } from \"@apollo/react-hooks\";\nimport acme_sub from \"../../Apis/acme_sub\";\n\nconst useSubscriptionQr = ({ sid }) => {\n\n    const { data } = useSubscription(acme_sub, { variables : sid !== '' ? { sid } : {}});\n    return data ? data : null;\n};\n\nexport default useSubscriptionQr;","import React, { useState, useEffect } from \"react\";\nimport {useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { useCookies } from \"react-cookie\";\nimport getSessionDemo from \"../../Apis/getSessionDemo\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./010_Login.css\"\nimport \"./010_Login_Mobile.css\"\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport FadeIn from 'react-fade-in';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {withStyles} from \"@material-ui/styles\";\nimport acme_sub from \"../../Apis/acme_sub\";\nimport post_acme from \"../../Apis/post_acme\";\nimport useSubscriptionQr from \"../../Components/Hooks/SubscriptionQr\";\n\nconst Login_010 = () => {\n\n    const history                       = useHistory();\n    const [ getSession ]                = useMutation(getSessionDemo);\n    const [ sid, setSid ]               = useState('');\n    const [ auth, setAuth ]             = useMutation(post_acme );\n    const [ cookie, setCookie]          = useCookies(['session','token']);\n    const [ qrString, setQrString ]     = useState(\"\");\n    const dataSubscription              = useSubscriptionQr({ sid });\n    // const { data } = useSubscription(acme_sub, { variables : sid !== '' ? { sid } : {} });\n\n    console.log(sid);\n\n    if(cookie.sid)\n        history.push('/dashboard');\n\n    if( dataSubscription ) {\n        console.log('data', dataSubscription);\n        setCookie('sid', dataSubscription.notifications.sid, {path:'/'});\n        setSid('');\n        setTimeout(() => {\n            history.push('/dashboard');\n        }, 2500);\n    }\n\n    useEffect(() => {\n        session();\n    },[setQrString, setSid]);\n\n    const session = async () =>{\n        try{\n            const response = await getSession({\n                variables : {\n                    \"command\":\"passwordless.session\"\n                }\n            });\n\n            setQrString(response.data.passwordless.QRbase64);\n            setSid(response.data.passwordless.sid);\n        }catch(e){\n            console.log('error',e);\n        }\n    };\n\n    // const tempForTesting = () => {\n    //     return (\n    //         <>\n    //             <Grid container className=\"testingArea\">\n    //                 <Grid item lg={5}>\n    //                     {/*<Button variant=\"contained\" onClick={onClickGetSessionWait}>1 Simulate GetSession</Button>*/}\n    //                 </Grid>\n    //                 <Grid item lg={1}>\n    //                 </Grid>\n    //                 <Grid item lg={6}>\n    //                     <Button variant=\"contained\" onClick={getSeessionApi}>2 Simulate Auth Wait (After Scan)</Button>\n    //                 </Grid>\n    //             </Grid>\n    //             <br/>\n    //             <br/>\n    //         </>\n    //     )\n    // }\n\n    // material ui components are linked via global theme not a direct css...\n    // this is why we use withStyles here\n    // we will have to create a global theme\n    const SendingAuthCircularProgress = withStyles({\n        root: {\n            color: '#00695c',\n        },\n    })(CircularProgress);\n\n    const ReceivingGetSessionQR = withStyles({\n        root: {\n            color: '#FFFFFF',\n        },\n    })(CircularProgress);\n\n\n    const showProgressControl = () => {\n        return (\n            <>\n                <div>\n                    <SendingAuthCircularProgress\n                        variant=\"indeterminate\"\n                        size={48}\n                        thickness={3}\n                    />\n                </div>\n            </>\n        )\n    }\n\n    const qrWaitProgressControl = () => {\n        return (\n            <>\n                <div className='qrCardAreaWait'>\n                    <div className=\"qrImage\">\n                        <ReceivingGetSessionQR\n                            variant=\"indeterminate\"\n                            size={48}\n                            thickness={3}\n                        />\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const showQRImage = () => {\n        return (\n            <>\n                <div>\n                    { sid === ''  ? showProgressControl() : <img className=\"qrImage\" src={`data:image/png;base64,${qrString}`} alt=\"\"/> }\n                </div>\n            </>\n        )\n    }\n\n    const showQRCardArea = () => {\n        return (\n            <>\n                {\n                    <Card className=\"qrCardArea\">\n                        <div>\n                            <div className=\"qrImage\">\n                                {showQRImage()}\n                            </div>\n                            <div className=\"qrImageSubText\">Scan the QR code in your mobile app to launch the site.</div>\n                            <div className=\"needHelpText\">Need Help? (Link Goes Here)</div>\n                        </div>\n                    </Card> }\n            </>\n        )\n    }\n\n    return (\n        <FadeIn delay={400}>\n            <div className=\"Login_010\">\n                <div className=\"signUp-card\">\n                    <Grid container>\n                        <Grid item lg={4} md={4} sm={4} xs={12}>\n                            <div className=\"leftBox\">\n                                <div className=\"left_title_text\">\n                                    Welcome to mvnifest.\n                                </div>\n                                <div className=\"top_title_text\">\n                                    mvnifest.\n                                </div>\n\n                            </div>\n                        </Grid>\n                        <Grid item lg={8} md={8} sm={8} xs={12}>\n\n                            <div className=\"rightBox\">\n                                {showQRCardArea()}\n                            </div>\n\n                        </Grid>\n                    </Grid>\n                    {/*{tempForTesting()}*/}\n                </div>\n            </div>\n        </FadeIn>\n    )\n}\n\nexport default Login_010;","import React from \"react\";\nimport ReactDOM from 'react-dom'\nimport {ApolloProvider} from 'react-apollo';\n// import graphQLClient from \"./Network/OldAWSGraphQLInterface\";\nimport {Provider} from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport reducers from './Reducers';\nimport { CookiesProvider } from \"react-cookie\";\n\nimport App from './Components/App';\nimport {client} from \"./Network/AolloGraphjQL\";\nimport reduxThunk from \"redux-thunk\";\nimport Dashboard from \"./views/200_Dashboard/Dashboard\";\nimport NotFound from \"./Components/NotFound\";\nimport \"./index.css\";\nimport Login_010 from \"./views/010_Login/010_Login\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nconst routes =\n    <Switch>\n        <Route exact path=\"/react_zero_alt\" component={App}/>\n        <Route exact path=\"/dashboard\" component={Dashboard}/>\n        <Route exact path=\"/login\" component={Login_010}/>\n        <Route component={NotFound}/>\n    </Switch>;\n\nconst WithProvider = () => (\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n          <CookiesProvider>\n              <Router>\n                  { routes }\n              </Router>\n          </CookiesProvider>\n      </Provider>\n    </ApolloProvider>\n);\n\nReactDOM.render(<WithProvider/>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}